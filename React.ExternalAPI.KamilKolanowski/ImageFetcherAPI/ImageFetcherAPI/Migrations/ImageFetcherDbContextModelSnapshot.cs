// <auto-generated />
using ImageFetcherAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ImageFetcherAPI.Migrations
{
    [DbContext(typeof(ImageFetcherDbContext))]
    partial class ImageFetcherDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("TCSA")
                .HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("ImageFetcherAPI.Models.Cat", b =>
                {
                    b.Property<string>("RowId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Breeds")
                        .HasColumnType("TEXT");

                    b.Property<int>("Height")
                        .HasMaxLength(6)
                        .HasColumnType("INTEGER");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Width")
                        .HasMaxLength(6)
                        .HasColumnType("INTEGER");

                    b.HasKey("RowId");

                    b.ToTable("Cats", "TCSA");
                });
#pragma warning restore 612, 618
        }
    }
}
